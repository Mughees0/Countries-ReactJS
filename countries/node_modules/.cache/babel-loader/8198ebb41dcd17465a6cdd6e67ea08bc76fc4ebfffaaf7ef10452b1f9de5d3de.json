{"ast":null,"code":"var _jsxFileName = \"/Users/mugheessaba/Desktop/Assignment/countries/src/components/mainpage/MainPage.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, React } from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: \"name\",\n  label: \"Name\",\n  minWidth: 170\n}, {\n  id: \"code\",\n  label: \"ISO\\u00a0Code\",\n  minWidth: 100\n}, {\n  id: \"population\",\n  label: \"Population\",\n  minWidth: 170,\n  align: \"right\",\n  format: value => value.toLocaleString(\"en-US\")\n}, {\n  id: \"size\",\n  label: \"Size\\u00a0(km\\u00b2)\",\n  minWidth: 170,\n  align: \"right\",\n  format: value => value.toLocaleString(\"en-US\")\n}, {\n  id: \"density\",\n  label: \"Density\",\n  minWidth: 170,\n  align: \"right\",\n  format: value => value.toFixed(2)\n}];\nfunction createData(name, code, population, size) {\n  const density = population / size;\n  return {\n    name,\n    code,\n    population,\n    size,\n    density\n  };\n}\nconst rows = [createData(\"India\", \"IN\", 1324171354, 3287263), createData(\"China\", \"CN\", 1403500365, 9596961), createData(\"Italy\", \"IT\", 60483973, 301340), createData(\"United States\", \"US\", 327167434, 9833520), createData(\"Canada\", \"CA\", 37602103, 9984670), createData(\"Australia\", \"AU\", 25475400, 7692024), createData(\"Germany\", \"DE\", 83019200, 357578), createData(\"Ireland\", \"IE\", 4857000, 70273), createData(\"Mexico\", \"MX\", 126577691, 1972550), createData(\"Japan\", \"JP\", 126317000, 377973), createData(\"France\", \"FR\", 67022000, 640679), createData(\"United Kingdom\", \"GB\", 67545757, 242495), createData(\"Russia\", \"RU\", 146793744, 17098246), createData(\"Nigeria\", \"NG\", 200962417, 923768), createData(\"Brazil\", \"BR\", 210147125, 8515767)];\nexport default function StickyHeadTable() {\n  _s();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    Axios.get(\"https://restcountries.com/v3.1/all\").then(res => {\n      console.log(res.data);\n      setData(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  });\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      width: \"100%\",\n      overflow: \"hidden\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      sx: {\n        maxHeight: 440\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: data.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              style: {\n                minWidth: column.minWidth\n              },\n              children: column.name.official\n            }, column.name.official, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: columns.map(column => {\n                const value = row[column.id];\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  children: column.format && typeof value === \"number\" ? column.format(value) : value\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 25\n                }, this);\n              })\n            }, row.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(StickyHeadTable, \"vUYrFLs/tQgzysaMpBGORg6p8Og=\");\n_c = StickyHeadTable;\nvar _c;\n$RefreshReg$(_c, \"StickyHeadTable\");","map":{"version":3,"names":["useState","useEffect","React","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Axios","columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","createData","name","code","population","size","density","rows","StickyHeadTable","page","setPage","rowsPerPage","setRowsPerPage","data","setData","get","then","res","console","log","catch","err","handleChangePage","event","newPage","handleChangeRowsPerPage","target","width","overflow","maxHeight","map","column","official","slice","row","length"],"sources":["/Users/mugheessaba/Desktop/Assignment/countries/src/components/mainpage/MainPage.jsx"],"sourcesContent":["import { useState, useEffect, React } from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Axios from \"axios\";\n\nconst columns = [\n  { id: \"name\", label: \"Name\", minWidth: 170 },\n  { id: \"code\", label: \"ISO\\u00a0Code\", minWidth: 100 },\n  {\n    id: \"population\",\n    label: \"Population\",\n    minWidth: 170,\n    align: \"right\",\n    format: (value) => value.toLocaleString(\"en-US\"),\n  },\n  {\n    id: \"size\",\n    label: \"Size\\u00a0(km\\u00b2)\",\n    minWidth: 170,\n    align: \"right\",\n    format: (value) => value.toLocaleString(\"en-US\"),\n  },\n  {\n    id: \"density\",\n    label: \"Density\",\n    minWidth: 170,\n    align: \"right\",\n    format: (value) => value.toFixed(2),\n  },\n];\n\nfunction createData(name, code, population, size) {\n  const density = population / size;\n  return { name, code, population, size, density };\n}\n\nconst rows = [\n  createData(\"India\", \"IN\", 1324171354, 3287263),\n  createData(\"China\", \"CN\", 1403500365, 9596961),\n  createData(\"Italy\", \"IT\", 60483973, 301340),\n  createData(\"United States\", \"US\", 327167434, 9833520),\n  createData(\"Canada\", \"CA\", 37602103, 9984670),\n  createData(\"Australia\", \"AU\", 25475400, 7692024),\n  createData(\"Germany\", \"DE\", 83019200, 357578),\n  createData(\"Ireland\", \"IE\", 4857000, 70273),\n  createData(\"Mexico\", \"MX\", 126577691, 1972550),\n  createData(\"Japan\", \"JP\", 126317000, 377973),\n  createData(\"France\", \"FR\", 67022000, 640679),\n  createData(\"United Kingdom\", \"GB\", 67545757, 242495),\n  createData(\"Russia\", \"RU\", 146793744, 17098246),\n  createData(\"Nigeria\", \"NG\", 200962417, 923768),\n  createData(\"Brazil\", \"BR\", 210147125, 8515767),\n];\n\nexport default function StickyHeadTable() {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    Axios.get(\"https://restcountries.com/v3.1/all\")\n      .then((res) => {\n        console.log(res.data);\n        setData(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  });\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\n      <TableContainer sx={{ maxHeight: 440 }}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {data.map((column) => (\n                <TableCell\n                  key={column.name.official}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name.official}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === \"number\"\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}